---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { Features as FeaturesType } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  items = [],
  image,
  columns,
  id,
  isDark = false,
  bg,
  classes = {},
  cta = await Astro.slots.render('cta'),
} = Astro.props as FeaturesType;

const {
  container: containerClass = "",
  feature: featureClass = "",
} = classes;
---

<section class={`relative ${isDark ? 'bg-blue-50 dark:bg-slate-800' : ''} py-16 md:py-20`} {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : <div class="absolute inset-0 dark:bg-transparent" />}
    </slot>
  </div>
  <div class={`relative mx-auto max-w-7xl px-4 sm:px-6 ${containerClass}`}>
    <div class="mb-10 md:mx-auto md:mb-12 max-w-3xl text-center">
      {tagline && <p class="text-base font-semibold uppercase tracking-wide text-primary dark:text-blue-200" set:html={tagline} />}
      {title && <h2 class="text-4xl font-bold leading-tight tracking-tight dark:text-white sm:text-5xl md:text-6xl font-heading mb-4" set:html={title} />}
      {subtitle && <p class="max-w-3xl mx-auto text-xl text-muted dark:text-slate-400" set:html={subtitle} />}
    </div>
    <div class={`grid mx-auto gap-8 ${columns === 4 ? 'lg:grid-cols-4 md:grid-cols-2' : columns === 3 ? 'lg:grid-cols-3 sm:grid-cols-2' : columns === 2 ? 'sm:grid-cols-2' : 'sm:grid-cols-1'}`}>
      {
        items && items.length && items.map((item) => (
          <div class={`flex flex-col p-6 bg-white dark:bg-slate-900 rounded-xl shadow-md hover:shadow-lg transition-shadow duration-300 ${featureClass}`}>
            {item.icon && (
              <div class="flex justify-center mb-6">
                {typeof item.icon === 'string' ? (
                  <Icon name={item.icon} class="w-12 h-12 text-primary" />
                ) : (
                  <Image
                    src={item.icon.src}
                    class="w-12 h-12 object-contain"
                    widths={[24]}
                    width={48}
                    height={48}
                    alt={item.title}
                  />
                )}
              </div>
            )}
            <div class="text-xl font-bold mb-3 text-center">{item.title}</div>
            {item.description && <p class="text-muted dark:text-gray-400 text-center flex-grow" set:html={item.description} />}
            {item.callToAction && (
              <div class="mt-6 text-center">
                <Button {...item.callToAction} />
              </div>
            )}
          </div>
        ))
      }
    </div>
    {cta && <div class="flex justify-center mt-10 md:mt-16">{cta}</div>}
  </div>
</section>
